// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Obter valores das vari치veis de ambiente
const ENV_URL = import.meta.env.VITE_SUPABASE_URL;
const ENV_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY;

// Fun칞칚o para validar se as vari치veis s칚o reais (n칚o placeholder)
const isValidConfig = (url?: string, key?: string): boolean => {
  if (!url || !key) return false;
  
  // Verificar se n칚o s칚o valores de placeholder/demo
  const isPlaceholderUrl = url.includes('your-project') || url.includes('demo') || url.includes('localhost');
  const isPlaceholderKey = key.includes('supabase-demo') || key.includes('your-anon-key') || key.length < 100;
  
  return !isPlaceholderUrl && !isPlaceholderKey;
};

// Verificar se as vari치veis est칚o realmente configuradas
const hasValidConfig = isValidConfig(ENV_URL, ENV_KEY);

// Usar apenas vari치veis de ambiente - NUNCA credenciais hardcoded
const SUPABASE_URL = ENV_URL || '';
const SUPABASE_ANON_KEY = ENV_KEY || '';

// Criar cliente Supabase apenas se as credenciais estiverem configuradas
export const supabase = hasValidConfig 
  ? createClient<Database>(SUPABASE_URL, SUPABASE_ANON_KEY)
  : null;

// Status da configura칞칚o
export const isUsingPlaceholderConfig = !hasValidConfig;

// ESTA 칄 A FUN칂츾O IMPORTANTE - ela deve retornar true quando configurado
export const isSupabaseConfigured = () => {
  // For칞a verifica칞칚o das vari치veis de ambiente
  const url = import.meta.env.VITE_SUPABASE_URL;
  const key = import.meta.env.VITE_SUPABASE_ANON_KEY;
  
  console.log('游댢 Verificando configura칞칚o:', {
    hasUrl: !!url,
    hasKey: !!key,
    urlPreview: url ? `${url.substring(0, 30)}...` : 'n칚o encontrada',
    keyPreview: key ? `${key.substring(0, 20)}...` : 'n칚o encontrada'
  });
  
  return !!(url && key && url.length > 10 && key.length > 50);
};

// Exportar configura칞칫es
export { SUPABASE_URL, SUPABASE_ANON_KEY as SUPABASE_PUBLISHABLE_KEY };
